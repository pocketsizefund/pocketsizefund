#!/usr/bin/env bash

# create inference endpoint
# for the model in SageMaker

set -e

environment="development"
if [[ "$1" == "production" ]]; then
    environment="production"
fi

location="remote"
if [[ "$2" == "local" ]]; then
    location="local"
fi

model_name=$3

if [[ -z "${model_name}" ]]; then
    echo "model name is required"
    exit 1
fi

model_artifacts_path=s3://pocketsizefund-artifacts/models/${model_name}

sagemaker_iam_role_arn=$(aws cloudformation describe-stacks \
    --stack-name pocketsizefund-${environment} \
    --query 'Stacks[0].Outputs[?OutputKey==`SageMakerIAMRoleARN`].OutputValue' \
    --output text)

account_id=$(aws sts get-caller-identity --query Account --output text)

account_region=$(aws --profile default configure get region)

image_name=$(python3 ./bin/helpers/get_name.py predictprice ${environment})

model_image_uri=${account_id}.dkr.ecr.${account_region}.amazonaws.com/${image_name}:latest

if [[ "${location}" == "local" ]]; then
    output=$(python3 ./bin/helpers/get_config_as_json.py)

    alpaca_api_key=$(python3 pkg/config/config.py --parameter AlpacaAPIKey)
    alpaca_api_secret=$(python3 pkg/config/config.py --parameter AlpacaAPISecret)
    aws_access_key_id=$(sed -n 's/^aws_access_key_id = //p' ~/.aws/credentials)
    aws_secret_access_key=$(sed -n 's/^aws_secret_access_key = //p' ~/.aws/credentials)

    docker run \
        --env MODEL_DIR=model \
        --env ALPACA_API_KEY=$alpaca_api_key \
        --env ALPACA_API_SECRET=$alpaca_api_secret \
        --env AWS_ACCESS_KEY_ID=$aws_access_key_id \
        --env AWS_SECRET_ACCESS_KEY=$aws_secret_access_key \
        --env AWS_DEFAULT_REGION=us-east-1 \
        --publish 8080:8080 \
        --rm ${model_image_uri}
else
    python3 ./bin/helpers/deploy_model.py \
        --environment ${environment} \
        --model-data ${model_artifacts_path} \
        --iam-role ${sagemaker_iam_role_arn} \
        --model-image-uri ${model_image_uri}
fi
