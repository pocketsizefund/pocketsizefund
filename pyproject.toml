[project]
name = "pocketsizefund"
version = "0.1.0"
description = "Open source quantitative hedge fund 🍊"
requires-python = ">=3.12"

[tool.uv.workspace]
members = [
    "infrastructure",
    "application/datamanager",
    "application/positionmanager",
    "application/predictionengine",
    "workflows",
]

[tool.uv.sources]
datamanager = { workspace = true }
positionmanager = { workspace = true }
predictionengine = { workspace = true }
workflows = { workspace = true }

[tool.hatch.build.targets.wheel]
packages = ["pocketsizefund"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "pytest>=8.3.5",
    "behave>=1.2.6",
]

[tool.pytest.ini_options]
testpaths = [
    "application/datamanager/tests",
    "application/positionmanager/tests", 
    "application/predictionengine/tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--color=yes",
    "--rootdir=/tests"
]
filterwarnings = [
    "ignore::DeprecationWarning:websockets.legacy.*",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
parallel = true
omit = ["*/__init__.py", "**/test_*.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.coverage.xml]
output = "coverage_output/.python_coverage.xml"

[tool.ruff.lint]
select = [
  "ANN", # type annotations
  "ASYNC",
  "ERA", # dead code
  "FAST", # fastapi
  "S", # bandit (security)
  "YTT" # flake8
]
[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = ["S101"]
"**/features/steps/**/*.py" = ["S101"]

[tool.ty.rules]
unresolved-import = "ignore"
invalid-return-type = "error"
invalid-argument-type = "error"
unresolved-reference = "error"
