<<<<<<< HEAD
version = 1

[install]
awscli.pkg-path = "awscli"
kubectl.pkg-path = "kubectl"
k9s.pkg-path = "k9s"
pre-commit.pkg-path = "pre-commit"
kn.pkg-path = "kn"
direnv.pkg-path = "direnv"
kubectx.pkg-path = "kubectx"
actionlint.pkg-path = "actionlint"
rustup.pkg-path = "rustup"
cargo-watch.pkg-path = "cargo-watch"
mise.pkg-path = "mise"
shfmt.pkg-path = "shfmt"
shellcheck.pkg-path = "shellcheck"
pyright.pkg-path = "pyright"
eksctl.pkg-path = "eksctl"
kubernetes-helm.pkg-path = "kubernetes-helm"
openssl.pkg-path = "openssl"
cargo-deny.pkg-path = "cargo-deny"
cargo-machete.pkg-path = "cargo-machete"
httpie.pkg-path = "httpie"
lazygit.pkg-path = "lazygit"

[vars]
PLATFORM = "linux/amd64"

[hook]
on-activate = """
  uv tool install vulture
  uv tool install ruff
  uv sync
  rustup default stable
  mise settings set experimental true
"""

[profile]
 common = '''
 '''

[services.grafana]
command = "kubectl port-forward -n monitoring svc/prometheus-grafana 3000:80"

[services.pricemodel]
command = "kubectl port-forward service/pricemodel 8080:8080"

[options]
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
=======
#
# This is a Flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(5) for more information.
#
version = 1

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
ansible.pkg-path = "ansible"
jmespath.pkg-path = "python312Packages.jmespath"
puppet-bolt.pkg-path = "puppet-bolt"
# hello.pkg-path = "hello"
# nodejs = { version = "^18.4.2", pkg-path = "nodejs_18" }

# Set environment variables in the `[vars]` section. These variables may not
# reference one another, and are added to the environment without first
# expanding them. They are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment, and will not be invoked if Flox detects that the
# environment has previously been activated. Variables set by the script will
# be inherited by `[profile]` scripts defined below. Note that any stdout
# generated by the script will be redirected to stderr.
[hook]
# on-activate = '''
#   # Set variables, create files and directories
#   venv_dir="$(mktemp -d)"
#   export venv_dir
#
#   # Perform initialization steps, e.g. create a python venv
#   python -m venv "$venv_dir"
# '''

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit environment variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and special care should be
# taken to ensure compatibility with all shells, after which exactly one of
# `profile.{bash,fish,tcsh,zsh}` is sourced by the corresponding shell.
[profile]
# common = '''
#   echo "it's gettin' flox in here"
# '''

# The `[services]` section of the manifest allows you to define services.
# Services defined here use the packages provided by the `[install]` section
# and any variables you've defined in the `[vars]` section or `hook.on-activate` script.
[services]
# postgres.command = "postgres --config-file=pg.conf"

# Additional options can be set in the `[options]` section. Refer to
# manifest.toml(5) for a list of available options.
[options]
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
# Uncomment to disable CUDA detection.
# cuda-detection = false
>>>>>>> 09-04-cleaning_up
